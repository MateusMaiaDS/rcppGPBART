// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// test_grow_tree
void test_grow_tree(arma::mat x_train, arma::mat x_test, arma:: vec y_train, arma:: mat x_cut, double alpha, double beta, int node_min_size, double tau, double tau_mu);
RcppExport SEXP _rcppGPBART_test_grow_tree(SEXP x_trainSEXP, SEXP x_testSEXP, SEXP y_trainSEXP, SEXP x_cutSEXP, SEXP alphaSEXP, SEXP betaSEXP, SEXP node_min_sizeSEXP, SEXP tauSEXP, SEXP tau_muSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type x_train(x_trainSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type x_test(x_testSEXP);
    Rcpp::traits::input_parameter< arma:: vec >::type y_train(y_trainSEXP);
    Rcpp::traits::input_parameter< arma:: mat >::type x_cut(x_cutSEXP);
    Rcpp::traits::input_parameter< double >::type alpha(alphaSEXP);
    Rcpp::traits::input_parameter< double >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< int >::type node_min_size(node_min_sizeSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< double >::type tau_mu(tau_muSEXP);
    test_grow_tree(x_train, x_test, y_train, x_cut, alpha, beta, node_min_size, tau, tau_mu);
    return R_NilValue;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rcppGPBART_test_grow_tree", (DL_FUNC) &_rcppGPBART_test_grow_tree, 9},
    {NULL, NULL, 0}
};

RcppExport void R_init_rcppGPBART(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
